{
  "info": {
    "_postman_id": "ebfa6c75-7385-47e4-89e2-e7769174325f",
    "name": "Mage Cloud",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "5f8cbf3d-ece6-49a7-9cd3-f0f144c51e29",
      "name": "oAuth2",
      "item": [
        {
          "_postman_id": "95ceedd9-598b-4eda-bba7-3413e26ee023",
          "name": "Token: client_credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1e0e280-a6cd-499c-b353-2e9bb4695a0a",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"guest-access-token\", jsonData.access_token);",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "    pm.response.to.not.have.jsonBody('refresh_token');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "8645a4ac-73ad-47c9-a3ba-def247b70dcb",
          "name": "Token: password",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "655aca92-7b3a-43c5-98cf-f8b614d02964",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"refresh-token\", jsonData.refresh_token);",
                  "    pm.environment.set(\"customer-access-token\", jsonData.access_token);",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('refresh_token');",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"password\",\n  \"username\": \"{{username1}}\",\n  \"password\": \"{{password}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "37111604-1856-45ea-9d55-403c3d059275",
          "name": "Token: password (user2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "53376f26-24e1-4e9d-ad88-41b72df911fc",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"customer-access-token-2\", jsonData.access_token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"password\",\n  \"username\": \"{{username2}}\",\n  \"password\": \"{{password}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "51d7b43f-263e-4964-8fc2-9eb1e8e2b69d",
          "name": "Token: authorization_code",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e455c6e7-0555-4b6e-a1e9-e4df1e547257",
                "type": "text/javascript",
                "exec": [
                  "if (false) { //skip for now as there is no good way to test",
                  "    if (responseCode.code === 200) {",
                  "        var jsonData = pm.response.json();",
                  "        pm.environment.set(\"guest-access-token\", jsonData.access_token);",
                  "    }",
                  "    ",
                  "    pm.test('Successfull call', function(){",
                  "        pm.response.to.be.success;",
                  "    });",
                  "    ",
                  "    pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "        var jsonData = pm.response.json();",
                  "        pm.response.to.have.jsonBody('token_type','Bearer');",
                  "        pm.response.to.have.jsonBody('expires_in', 3600);",
                  "        pm.response.to.have.jsonBody('access_token');",
                  "        pm.response.to.have.jsonBody('scope', null);",
                  "    });",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "3092705d-cd39-4811-b8df-1c6636d785a4",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"authorization_code\",\n  \"code\": \"1b8e9872e7fb093a71482ea13902f28b2ad1c4e5\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "26118b89-b242-41bd-8a1d-65bcd3595320",
          "name": "Token: refresh_token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3019287-a9f7-445b-af8b-bd18971c4751",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"customer-access-token\", jsonData.access_token);",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"refresh_token\",\n  \"refresh_token\": \"{{refresh-token}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "6cf3196f-27b7-4a58-969e-b0ab02be9063",
          "name": "Token: refresh_token re-use",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d078640e-9115-4b6e-8c25-7a6122a8c838",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test('New access token differs from the old', function() { ",
                  "    pm.expect(pm.environment.get(\"customer-access-token\")).to.not.equal(jsonData.access_token);",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "});",
                  "",
                  "if (jsonData.hasOwnProperty('access_token')) {",
                  "  pm.environment.set(\"customer-access-token\", jsonData.access_token);  ",
                  "}",
                  "",
                  "pm.environment.unset(\"refresh-token\");"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"refresh_token\",\n  \"refresh_token\": \"{{refresh-token}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "4f206f9c-d961-403f-93ea-b55f1ca3a8bb",
      "name": "/v2/carts | /v2/carts/:id",
      "item": [
        {
          "_postman_id": "86e77c81-fde5-4389-9bf4-a21364735595",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "6c6ae2f5-c17b-48f8-9313-8b899fdf1949",
              "name": "Create customer cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a customer cart"
              },
              "response": []
            },
            {
              "_postman_id": "a1825814-5476-4836-ab63-eb90790c0f97",
              "name": "Get Cart via ME endpoint",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded cart via ME endpoint\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/me",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "me"
                  ]
                },
                "description": "Creates a customer cart"
              },
              "response": []
            },
            {
              "_postman_id": "e99a7ccd-b916-476f-ae0c-1836b12b41aa",
              "name": "Get cart via {cartId}",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "{{cartId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "2a413a8c-2392-4c3b-b3a4-8961dfeb94a1",
              "name": "Use bad cartID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Bogus quote cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/000",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "000"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "045a207c-e994-463e-9a95-31a7c943ae35",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "93bdadf0-5bd7-423c-927f-99abd8dcc0e6",
              "name": "ME endpoint as guest",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"loading ME endpoint as guest fails\"] = responseCode.code === 400;"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/me",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "me"
                  ]
                },
                "description": "calls a ME endpoint"
              },
              "response": []
            },
            {
              "_postman_id": "9fe0b9d0-4cde-4e1d-bbdc-a1feab9f7a5f",
              "name": "Customer Quote as guest",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 403\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "{{cartId}}"
                  ]
                },
                "description": "calls a customer cart as guest"
              },
              "response": []
            },
            {
              "_postman_id": "a954ca19-9aee-427e-8da5-201a6fad242b",
              "name": "Create guest cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
              },
              "response": []
            },
            {
              "_postman_id": "95f579b8-f59f-4ca5-8bec-87512cfa1ed7",
              "name": "Guest Quote as guest",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Loading guest quote as guest\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "{{cartId}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "c5426e99-0f77-48db-b5e3-f1fc3bd08807",
      "name": "/v2/carts/:id/items",
      "item": [
        {
          "_postman_id": "6a1b271e-af88-449e-9204-2338c4af2573",
          "name": "Product",
          "item": [
            {
              "_postman_id": "44778cd1-868d-4c8f-95f8-5b155b0325a9",
              "name": "Customer - Add",
              "item": [
                {
                  "_postman_id": "331a1010-68ce-48a4-bd25-ca997bc666c4",
                  "name": "/carts: customer",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "241dfa2e-f761-4e28-a743-bf53955a9cc5",
                  "name": "Bundle + Configurable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n      \"product_id\": \"447\",\n      \"qty\": 2,\n      \"bundle_option\": {\n        \"23\": \"88\",\n        \"24\": \"91\"\n      },\n      \"bundle_option_qty\": {\n        \"23\": \"3\",\n        \"24\": \"4\"\n      }\n    }\n  },\n  {\n    \"product\": {\n       \"product_id\": \"422\",\n    \t\"qty\": 1,\n    \t\"super_attribute\": {\n           \"92\": \"17\",\n           \"180\": \"76\"\n        }\n    }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "4525d7f7-d55f-4700-a7d2-87675bf75e04",
                  "name": "Add Configurable: Skirt",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "c4a78088-6f92-4ee7-9cc5-fd65db3ae4be",
                  "name": "Add Configurable: Skirt via SKU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"sku\": \"wsd000c\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "d76d43ba-3574-454d-b80c-fed9e6e28a85",
                  "name": "Bundled",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"447\",\n\t    \"qty\": 2,\n\t    \"bundle_option\": {\n\t      \"23\": \"88\",\n\t      \"24\": \"91\"\n\t    },\n\t    \"bundle_option_qty\": {\n\t      \"23\": \"3\",\n\t      \"24\": \"4\"\n\t    }\n\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
                  },
                  "response": []
                },
                {
                  "_postman_id": "61081a35-7211-4d9b-b42d-ca2a5c150a4c",
                  "name": "Downloadable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"563\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
                  },
                  "response": []
                },
                {
                  "_postman_id": "c9d67be6-ca40-4f77-a9c7-223bb4a85bea",
                  "name": "Grouped",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"439\",\n\t    \"qty\": 1,\n\t    \"super_group\": {\n\t      \"541\" : 2\n\t    }\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
                  },
                  "response": []
                },
                {
                  "_postman_id": "6b6992fd-8b19-4d53-967e-4be227432b9a",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "ae5c7997-651a-4e31-8e59-1625d962e7b6",
                  "name": "GiftCard Combined",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "80c8e513-1bca-429b-a1fb-9b129d4f7efe",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif001\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"75\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Combined type Gift card with custom price"
                  },
                  "response": []
                },
                {
                  "_postman_id": "0f379091-7627-4462-880e-d0b768101479",
                  "name": "GiftCard Virtual CP",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fa327b11-c19c-48fb-b431-b26cdbe5f546",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif003\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"50\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                },
                {
                  "_postman_id": "2d67baef-6c7b-4b66-9e1c-fea3e8426299",
                  "name": "GiftCard Virtual Set",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e40fb867-1ea6-49a3-8742-cbd3f98c0247",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif002\",\n\t    \"qty\": 1,\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "ed154daf-7c24-49cf-9d7c-dab52c9ce0aa",
              "name": "Customer - Update",
              "item": [
                {
                  "_postman_id": "5a5bf664-5ba2-4e21-aaf7-7abcf682bf34",
                  "name": "/carts: customer",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "ba54a56d-a04a-432a-b84c-0f1edd64a9a5",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "3fd411ca-ac19-49e6-aa80-91e75b2af982",
                  "name": "Get cart contents",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                          "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                          "} else {",
                          "    tests[\"Not 200 code or no cart items returned\"] = false;",
                          "}",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                          "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "df085687-d6e3-4dca-b5a9-a356518ea7ca",
                  "name": "Update simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n  \t\"cartItemId\": \"{{cart_item_id}}\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "8bdf29eb-974e-424a-9ba0-86f625d088dc",
                  "name": "Get cart contents",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "ced08013-4bff-4a49-9c90-2dadf7692032",
              "name": "Customer - Delete",
              "item": [
                {
                  "_postman_id": "c64f4a85-8a68-4b80-a4bd-205836160216",
                  "name": "All item removal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "be11aba7-2ad5-4ee9-93ff-1d5f246cd51b",
                  "name": "Check cart for no items",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"No items in cart\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.items).to.be.empty;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "d229b7fb-ed40-4aa9-8bd0-b431b581bdf8",
              "name": "Customer - Errors",
              "item": [
                {
                  "_postman_id": "8a7ba765-fdba-47e4-b074-064003143356",
                  "name": "Bad product ID",
                  "item": [
                    {
                      "_postman_id": "4f708b43-724d-41d0-a707-aa77f9b3621a",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "3d63f322-d897-4d0c-a779-93b970c770ba",
                      "name": "Cfg + non-existing",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Product does not exist\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n       \"product_id\": \"422\",\n    \t\"qty\": 1,\n    \t\"super_attribute\": {\n           \"92\": \"17\",\n           \"180\": \"76\"\n        }\n    }\n  },\n  {\n    \"product\": {\n\t    \"product_id\": \"9999\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "fb0d78dd-a634-4c9e-8061-2422a8f01296",
                      "name": "Cart should be empty",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No products were added\", function () {",
                              "    pm.expect(jsonData.items.length).to.eql(0);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "791a7e35-7bc8-4a61-a6a3-0dd3ee5286a2",
                  "name": "Out of stock",
                  "item": [
                    {
                      "_postman_id": "35d68fce-46ea-4162-befe-b53e92acdcdf",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.cartId) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "943ae64f-5c1b-4677-a6f4-e5a7762d8fc6",
                      "name": "Add simple, qty 999",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 999\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "a50b3cd9-1e2c-43a6-90d4-bdee374cdaed",
                      "name": "Check cart errors",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is indeed 999\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(999);",
                              "});",
                              "",
                              "pm.test(\"Cart has errors\", function () {",
                              "    pm.expect(jsonData.has_error).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Item has errors & error array\", function () {",
                              "    pm.expect(jsonData.items[0].has_error).to.eql(true);",
                              "    pm.expect(jsonData.items[0].errors).to.not.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "c4a09b62-6842-444a-a204-bf27d03b1400",
                  "name": "Minimum order amount",
                  "item": [
                    {
                      "_postman_id": "81dde33e-9ca1-42e5-a320-48a657cb92cc",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.cartId) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "6f7875ed-abd4-42f8-b42b-c0e993df8ae4",
                      "name": "Add simple, qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"395\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 559\nType: Downloadeable\nName: If You Were by Keshco\nSKU: hbm006\nURL: if-you-were-by-keshco\nCategory: Books & Music\nPrice: $2.00\nQty: 1"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "eaa7c61b-0714-4752-b988-17787d5c6bb4",
                      "name": "Check cart errors",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8e283f85-23bb-447b-b1ba-904f6e460266",
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is indeed 1\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                              "});",
                              "",
                              "pm.test(\"Cart has errors\", function () {",
                              "    if (pm.variables.get(\"minimum_order_active\") === '1') {",
                              "        pm.expect(jsonData.has_error).to.eql(true);",
                              "        pm.expect(jsonData.errors).to.not.be.empty;",
                              "    } else {",
                              "        pm.expect(jsonData.has_error).to.not.exist;",
                              "        pm.expect(jsonData.errors).to.not.exist;",
                              "    }",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "7580c442-8d6a-4144-9fe0-64a53b6ff84e",
              "name": "Guest - Add",
              "item": [
                {
                  "_postman_id": "eae8c5df-3b0b-4dc0-9394-d02efc87cee9",
                  "name": "Nominal product",
                  "item": [
                    {
                      "_postman_id": "950c7851-98f3-42d6-b797-4d6c858d68c5",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8b226cf1-587a-4d44-bc2d-eca00285ac79",
                      "name": "Nominal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"mem000\",\n\t    \"qty\": 1,\n\t    \"options\": {\n\t      \"6\": {\n\t        \"month\": \"01\",\n\t        \"day\": \"17\",\n\t        \"year\": \"2017\"\n\t      }\n\t    },\n\t    \"recurring_profile_start_datetime\":\"09/15/2017 09:49 PM\"\n\t  }\n  }\n]\n\n"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Nominal and recurring profile item"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "fa6d6cc5-674c-452a-a7e6-ac889ca07d77",
                      "name": "Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Cannot add another product with nominal in cart\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "198ea4c6-deb6-4110-9c97-73f7b40e6d16",
                  "name": "/carts: Guest Cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                  },
                  "response": []
                },
                {
                  "_postman_id": "26523521-00af-48e2-a46c-62703e56e8b2",
                  "name": "Bundle + Configurable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n      \"product_id\": \"447\",\n      \"qty\": 2,\n      \"bundle_option\": {\n        \"23\": \"88\",\n        \"24\": \"91\"\n      },\n      \"bundle_option_qty\": {\n        \"23\": \"3\",\n        \"24\": \"4\"\n      }\n    }\n  },\n  {\n    \"product\": {\n       \"product_id\": \"422\",\n    \t\"qty\": 1,\n    \t\"super_attribute\": {\n           \"92\": \"17\",\n           \"180\": \"76\"\n        }\n    }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "9b0dc680-cae2-4108-80be-d1dfd48d3e37",
                  "name": "Add Configurable: Skirt",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "074a1450-01b9-499e-a25b-7f75ad5c385e",
                  "name": "Bundled",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"447\",\n\t    \"qty\": 2,\n\t    \"bundle_option\": {\n\t      \"23\": \"88\",\n\t      \"24\": \"91\"\n\t    },\n\t    \"bundle_option_qty\": {\n\t      \"23\": \"3\",\n\t      \"24\": \"4\"\n\t    }\n\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
                  },
                  "response": []
                },
                {
                  "_postman_id": "b336b767-e5dd-491a-b529-99ced7daea40",
                  "name": "Downloadable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"563\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
                  },
                  "response": []
                },
                {
                  "_postman_id": "581282e5-48da-4eb5-a587-5bf02d32ec1d",
                  "name": "Grouped",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"439\",\n\t    \"qty\": 1,\n\t    \"super_group\": {\n\t      \"541\" : 2\n\t    }\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
                  },
                  "response": []
                },
                {
                  "_postman_id": "7b685f88-9471-45c3-916f-8000b997b196",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "4524ae51-a4de-4532-98ae-a20c09ecb499",
                  "name": "GiftCard Combined",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2721dfff-e833-4863-b072-cf5ddd78ce2d",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif001\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"75\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Combined type Gift card with custom price"
                  },
                  "response": []
                },
                {
                  "_postman_id": "3da1fd51-f822-4c4c-9315-24bf9e0dd873",
                  "name": "GiftCard Virtual CP",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6949ae5b-fa51-4534-a9f1-9cddb7881023",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif003\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"50\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                },
                {
                  "_postman_id": "04de3b69-1476-40cd-bc68-22febeb81641",
                  "name": "GiftCard Virtual Set",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0edd61ba-1533-4c9e-8bf7-a0ca2691d49a",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif002\",\n\t    \"qty\": 1,\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "9d71d37e-d9b9-474b-88f0-f05ee54e526d",
              "name": "Guest - Update",
              "item": [
                {
                  "_postman_id": "c2370c11-02e9-4a4e-aa5f-aae4d6ff518f",
                  "name": "Advanced",
                  "item": [
                    {
                      "_postman_id": "64a8c2c9-df6d-41f3-8f0e-5cfab2281b09",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "a2071105-bec3-4015-8f62-3f6e74218f8d",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "6c187fd5-f6a3-47ce-9661-baca44928c7d",
                      "name": "Cart: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "calls a customer cart as guest"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "5ee2e653-d7fd-427a-ba25-dff9aed7cf05",
                      "name": "Update simple & add confg",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n  \t\"cartItemId\": \"{{cart_item_id}}\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n  },\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "b306fe3f-b33e-41de-ac10-c95c260e5e2a",
                      "name": "Cart: qty updated",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is now updated to 3 for the previously inserted simple product & qty 1 for the configurable\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                              "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "b88a48e9-4366-4865-b0d7-ebc05ba1c638",
                  "name": "/carts: Guest Cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                  },
                  "response": []
                },
                {
                  "_postman_id": "f5fbef8f-8bd1-44d1-b97c-c382a5d004bf",
                  "name": "Add Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "f8f37ce9-6d84-47f1-80a5-c85a7d751f2e",
                  "name": "Cart: qty 1",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                          "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                          "} else {",
                          "    tests[\"Not 200 code or no cart items returned\"] = false;",
                          "}",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                          "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "calls a customer cart as guest"
                  },
                  "response": []
                },
                {
                  "_postman_id": "6472881d-60fa-4e91-9ea8-f26c1298166f",
                  "name": "Update simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n  \t\"cartItemId\": \"{{cart_item_id}}\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "7d4710d2-9b79-4b1e-a86b-6f7671490d51",
                  "name": "Cart: qty updated",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "332a8fd8-3981-4cc3-8cac-5904e4cf075b",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "e4cd411e-924a-4a99-b940-dd0de57f62b7",
              "name": "Guest - Delete all",
              "item": [
                {
                  "_postman_id": "bf9bf69f-8dd8-406c-8fec-6581505eff82",
                  "name": "Delete All",
                  "item": [
                    {
                      "_postman_id": "f5dc49f0-c120-4d1e-8d62-2daff8e75078",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "0f435bc7-5a75-4eee-9b1b-17122e189fae",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "0f860347-e093-4acf-939f-df59b25ee502",
                      "name": "All item removal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "62e674c8-2f22-4002-a535-3ab3da908802",
                      "name": "Check cart for no items",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "9fea1120-7ca3-4827-bc87-2964e0d1f50d",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "72bad579-a0be-4401-817e-d6da2bab670d",
                  "name": "Delete by IDs",
                  "item": [
                    {
                      "_postman_id": "675cb985-2ffa-43b4-a88a-61bd62787a97",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "23e044ba-5ea2-4b9e-a23b-270f826d0f70",
                      "name": "Get all cart item ids",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    var items = '';",
                              "    jsonData.items.forEach(function(item) {",
                              "        items += item.item_id + ',';",
                              "    });",
                              "    pm.environment.set(\"cart_items_to_remove\", items);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "6d7a829c-67f8-40fd-a2c2-00696011faa9",
                      "name": "{cartId}/items?cartItemIds",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds={{cart_items_to_remove}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "query": [
                            {
                              "key": "cartItemIds",
                              "value": "{{cart_items_to_remove}}"
                            }
                          ]
                        },
                        "description": "Delete cart items by ids provided"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "ec8a4d43-f9d8-415f-871a-1083bc7f7257",
                      "name": "Check all items are deleted",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "description": "Retrieves the items in the cart and deletes them using their id's",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "cc8bb921-f807-4dc6-9905-9bfca3bb5253",
          "name": "Coupon",
          "item": [
            {
              "_postman_id": "cf261698-3bb9-4da5-b710-7d0c3a44d475",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "8b3be5b1-db1d-4943-b78c-fc574b969de4",
                  "name": "Add",
                  "item": [
                    {
                      "_postman_id": "186f75f9-2b2e-4276-a653-ddbbb304d40f",
                      "name": "Auto-Gen",
                      "item": [
                        {
                          "_postman_id": "e1473cc1-dd92-4fca-a163-18f04d715c4f",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "b6d9da77-9cf2-4064-917f-8637f9f28519",
                          "name": "Add Simple: 500",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "c758507e-455f-4d0f-81d8-1a66aa4a0262",
                          "name": "Add 10% off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"3I5REXK80NUN\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Autogenerated coupon code.\nCondition for coupon is:\nGroup: Not-Logged-In, General, VIP, Wholesale; \nIf item in cart has \"Price in cart\" = 500"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "769fcc61-e8ac-4bdd-9dc2-088fffea117a",
                          "name": "Check coupon exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"3I5REXK80NUN code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"3I5REXK80NUN\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "fe77e10c-c73f-4136-a987-c9d085391b6c",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "74d14d2a-3ef5-44a1-8fcb-5bfd172aa005",
                      "name": "Add Configurable: Boots",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8aedeb52-16ef-4a77-8d6c-413d436bacfa",
                      "name": "Check no discount",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "feac9644-67bc-4c98-8d5b-3b52ed79daa8",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "872cc312-0e2c-4c6f-b9d6-e59658e48193",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "790e87ec-6777-4f3b-974c-0287a7fa85ad",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "d304c55c-f6f8-4eba-a1cf-740f9471a968",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "c1ae538a-6b5c-4ddd-ad13-528106be2386",
                      "name": "Add Configurable: Boots",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "06211595-3f72-4cdd-95f3-0143e319a767",
                      "name": "Check no discount",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8339b256-1fbc-497d-9414-aeed03a2e826",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e84daeb2-6165-4dbf-9a77-582ac6af8dbf",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "32532afb-3839-4fbd-a3f5-40b21a686792",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e80af8cf-4fd5-43f8-b09d-a2ef4febfdac",
                      "name": "Add 25% off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"25OFF\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Conditions: for customer group General and Category: Apparel"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "16fe23e1-0684-4351-861b-f3b92022966e",
                      "name": "Check 25OFF exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"25 off code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"25OFF\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "18817775-6d08-49b4-aac0-ae6c12b1dd83",
                      "name": "Add 10 flat via Update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\t\t\n  \t\t\"cartItemId\": \"1234\",\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "ceec82ae-7e8c-4325-9f58-e92dca906c17",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8a66f8ef-5305-4d4d-8621-c1aa109a8f3c",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d6357082-730c-42ca-82aa-c2aba5fa3584",
                      "name": "Add empty coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    }
                  ],
                  "description": "Run after the add tests",
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "f765b955-93c8-4f0e-ac05-de1e38093d15",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "af1e5e96-dd6d-45e3-9fde-998643c76d85",
                      "name": "Via Empty Add",
                      "item": [
                        {
                          "_postman_id": "de4f15fc-295a-4e99-82bd-7932c069564d",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "119bd666-9118-41f2-9b96-a07b37cddfcf",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "95539361-f8a4-49ad-bac1-eb01af49e290",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "b781cff4-7a77-4cf2-a549-dfa4aa2001c9",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a5050b66-7b42-491a-8475-3338832af3bd",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "3db7d0a9-7ab8-4387-8412-dcf75b843f5b",
                          "name": "Add empty coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "84d5d201-dafb-413d-ae89-fb8ddd5bd4ea",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "b155374f-e38b-4c6d-8424-318c0eed6632",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "f74651a9-44bf-4a13-b803-0811be211f1d",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "595130e3-1ffe-4244-bc6f-e29df9214788",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "caa11f7e-07e1-4383-babf-32e61e47704a",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "8ba1d08c-723c-48a0-bc43-ef09a239889f",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "90e2b031-d8eb-40d7-96dc-5f8ecf77af8d",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "af3c60b6-d189-4e29-aa95-d9dd136a82ce",
                          "name": "Use ?cartItemIds=",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds=COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "COUPON_XXX"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "92bceeb1-d156-4e31-8586-37a31b88d97f",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.not.empty;",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "3ceb557a-4e92-4c1b-96a1-962e39280018",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "5576dbb5-2e12-49c2-aea4-2051d76595d6",
                  "name": "Add",
                  "item": [
                    {
                      "_postman_id": "dc146c24-9154-4753-9b1f-39ceeee3e946",
                      "name": "Auto-Gen",
                      "item": [
                        {
                          "_postman_id": "23750903-ac26-480a-9eb6-ad2c43255fdc",
                          "name": "/carts: Guest Cart",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "18622c6e-cfed-44f7-a524-eb24caebcffc",
                          "name": "Add Simple: $500",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "3a073807-28a1-4b3a-a290-e392caae60ab",
                          "name": "Add 10% off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"3I5REXK80NUN\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Autogenerated coupon code.\nCondition for coupon is:\nGroup: Not-Logged-In, General, VIP, Wholesale; \nIf item in cart has \"Price in cart\" = 500"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "601644cd-01cb-4f2c-ac4e-f066abd52995",
                          "name": "Coupon is in cart",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"3I5REXK80NUN code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"3I5REXK80NUN\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "bd13fe08-092e-45c7-9909-00fc13259c3d",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8c8b5f3b-cf8b-415f-a829-3d17641caeda",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "272c9320-4386-4210-892d-6fbfef142ce6",
                      "name": "Add 15 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "4605b377-7980-4f4b-ac5a-e62fd81fbbd6",
                      "name": "Check evening15 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"evening15 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "1054c7e8-565c-43f9-933e-9b680311839f",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "017ada2f-2d96-41c8-b5d0-3aeb91974441",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "b8115c09-2a68-4fe2-8f86-e7e525b70db0",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e7d6a83b-85ec-4bcb-b6c7-9189ae6f2cda",
                      "name": "Add 15 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "0ff68d14-284b-434a-958e-c32071b5d6bd",
                      "name": "Check evening15 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"evening15 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "960be831-ec8f-4a1d-b876-53f62c40efe6",
                      "name": "Update with empty",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n  \t\t\"cartItemId\": \"1234\",\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "24999e44-afe4-428e-89bd-c5bb46ae52a0",
                      "name": "Check no discount",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "7623978b-eb40-4d79-a953-f03c8a34107e",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "e1f91a53-a882-4849-93cb-9c6caf9df527",
                      "name": "Via Empty All",
                      "item": [
                        {
                          "_postman_id": "b05e7323-7626-4bf8-81d0-3a120ea734e5",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1c894823-3d00-40e2-a04e-28bd4670143b",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "2a6273a4-3c9a-48f5-a62d-ae560308691a",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "8d2b7248-e478-4399-a97b-9906dfb756e2",
                          "name": "Check evening15 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "2fbe59f4-c13d-463d-adda-1e63112c8276",
                          "name": "Add empty coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5d1856d1-ed89-4af4-889b-4a6bdb451d5b",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a3027707-076c-4784-8054-f34ebc6e5243",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "d1b004ff-c9f4-4510-a631-eed628fbce0c",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "b905a707-c603-4dac-b906-33bcefc0fbcc",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "7122ddf5-118a-4540-93bb-2966593a898b",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "465a04e6-1613-40a9-ac99-ad2846b8150e",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "60640994-9710-4cfd-80a5-f0ab2e888806",
                          "name": "Check evening15 exists copy",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "d97304c2-5cd3-4f9b-b4f6-670ec031dd97",
                          "name": "Use ?cartItemIds=",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds=COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "COUPON_XXX"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "777a3e75-2606-4a84-b639-3eb9136e2890",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.not.empty;",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "116091de-9181-45c9-832b-41968ff9773c",
          "name": "Mixed",
          "item": [
            {
              "_postman_id": "1378acb4-52d1-44b6-8cff-2a1c2fab4763",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "03f1b1c0-7af3-4499-95cf-8654c35d3ae7",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "732bc789-5ab2-40fe-88f3-d625082d9f19",
                      "name": "Product first",
                      "item": [
                        {
                          "_postman_id": "2245f08a-2b86-45ea-812f-6dffec6d0184",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "89a45ac6-7c5a-41aa-8350-af1bdda4b5e2",
                          "name": "Add Configurable + Coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  },\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f0530a82-452c-47df-a5d1-f071d1df2080",
                          "name": "Check code + product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});",
                                  "",
                                  "pm.test(\"Configurable product is in cart\", function () {",
                                  "    pm.expect(jsonData.items.length).to.be.eql(2);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "fd8d7eeb-87b7-4d25-8100-d9b3064cbcf8",
                      "name": "Product last",
                      "item": [
                        {
                          "_postman_id": "7646d6b5-2ae6-4422-830e-22f9eb95d063",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5728a931-6886-4ac3-8a9c-8e29207dd7b4",
                          "name": "Add Coupon + Configurable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Cannot add coupon before items are in cart', function(){",
                                  "    pm.response.to.have.status(400);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  },\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "description": "Run after the add tests",
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "96759d1c-73ea-4391-9fdf-c5ae529ece5c",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "02d5574c-0fc3-47db-bca9-9961886f03d6",
                      "name": "Via remove all",
                      "item": [
                        {
                          "_postman_id": "9178cf77-24df-4338-b571-241980192ea7",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "6000edaa-f6b1-45a6-9f10-9f047091fe72",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f9999b55-3eaf-432c-89c0-33f1547bdfb6",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "3fa2dfbc-2984-4c9d-83d1-0e705543d9b1",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "d0f96c72-8b50-476a-82ba-0cec12d348dc",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "471c1b87-ee24-4928-bff4-09d6189f6671",
                          "name": "Remove all items",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "6c4844a3-d9a6-420a-b409-e5a5f489c8fa",
                          "name": "Check no coupon/prods",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"No items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.empty;",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "e9fb78c7-f1b1-4d37-a6f5-9ae9aac69f0d",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "d3c3d442-648f-44ea-b18d-faa0c7c346f7",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1e0ae44e-6fbf-4cb8-8dc4-25a7b241e28d",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "50fbca89-6899-4696-8d86-ecb6739e11d2",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "26e34ce9-7ef4-4ab0-96a7-33c32fc7f3dd",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "fd530e77-6964-4b0b-93e1-4f3b34411b99",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "386984bf-3cb4-4378-ad3d-0e277b5af34d",
                          "name": "CartItemIds > variable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});",
                                  "",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    var items = '';",
                                  "    jsonData.items.forEach(function(item) {",
                                  "        items += item.item_id + ',';",
                                  "    });",
                                  "    pm.environment.set(\"cart_items_to_remove\", items);",
                                  "} else {",
                                  "    tests[\"No cart items returned\"] = false;",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "842c6149-dfb8-48f4-8724-bc26462d5919",
                          "name": "Add simple product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Swiss Movement Sports Watch, Category: Jewelry, Price: $500.00"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "ecd01b98-8b13-4508-817e-94eba7c5d052",
                          "name": "Remove config + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds={{cart_items_to_remove}}COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "{{cart_items_to_remove}}COUPON_XXX"
                                }
                              ]
                            },
                            "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "e09fbab3-424c-4bc1-926b-7208b70eb8ab",
                          "name": "Check discount/products",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have the 544:Watch product in cart\", function () {",
                                  "    pm.expect(jsonData.items[0].product_id).to.be.eql(\"554\");",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            },
                            "description": "Checks that there is no coupon applied and still have items in cart"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "18c7a948-cbde-43a7-a772-d1eecfde03e0",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "9fc1545a-7b17-4094-8db3-249e41132b0e",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "c4517c14-e964-4c31-9999-c2836fdc8d98",
                      "name": "Product first",
                      "item": [
                        {
                          "_postman_id": "7e73dfe9-2973-4844-aeeb-762d312bb901",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1d6051e9-eecd-43b3-9194-1395a60a10b2",
                          "name": "Add config + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  },\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Essex Pencil Skirt; SKU: wsd000c; Category: Dresses & Skirts; Price: $185.00\nSub-Product:"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "d89de7ac-7a89-44a2-aa72-168e04dba13c",
                          "name": "Check code + product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});",
                                  "",
                                  "pm.test(\"Configurable product is in cart\", function () {",
                                  "    pm.expect(jsonData.items.length).to.be.eql(2);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "36de77f7-21de-47dd-8a34-68c202d5c265",
                      "name": "Product last",
                      "item": [
                        {
                          "_postman_id": "d31135db-4ae7-4200-9de9-e586e255b7aa",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1da41e67-a3b7-46f3-a486-f3704405d08f",
                          "name": "Add coupon + config",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Cannot add coupon before items are in cart', function(){",
                                  "    pm.response.to.have.status(400);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  },\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Essex Pencil Skirt; SKU: wsd000c; Category: Dresses & Skirts; Price: $185.00\nSub-Product:"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "c7623e5d-8c3d-4741-a1ec-9d712e1572bb",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "7d7c8402-2d1e-4ba8-a895-ff7ba30e3219",
                      "name": "Via Empty All",
                      "item": [
                        {
                          "_postman_id": "215ade7a-9b56-4bd0-ac38-37598c8a7a78",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "920076c9-7e80-46bf-b6f7-bf66a2d2d40d",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1b725321-154a-471d-b7bb-16d85a95344a",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "bd1e2d12-9e2c-498e-a0a6-aec8c8507716",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "041ca8bd-b305-4797-969e-58298c5e1eae",
                          "name": "Check evening15 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "178df435-c53c-498e-809e-00a9fafc122c",
                          "name": "Remove all items",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5e4b320e-2d16-453c-8b28-624bc5f74fb4",
                          "name": "Check no prod + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"No items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.empty;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "825d904a-c733-41a6-ba84-0c6294f07076",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "d50df871-580c-45e1-ba0c-87185e26a0c0",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "484cf9f4-c000-4bc6-acbc-358f0acd420f",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "2e83f235-7bb5-4f1f-8832-ccc6bcc80cc7",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "19e6f7b5-2380-42a1-b58c-3b0473df9c53",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a8b0671e-98d6-4bd3-8a02-86777e3095df",
                          "name": "CartItemIds > variable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});",
                                  "",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    var items = '';",
                                  "    jsonData.items.forEach(function(item) {",
                                  "        items += item.item_id + ',';",
                                  "    });",
                                  "    pm.environment.set(\"cart_items_to_remove\", items);",
                                  "} else {",
                                  "    tests[\"No cart items returned\"] = false;",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a9258fe8-74e3-4db0-bd07-21c92d633cdd",
                          "name": "Add simple product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Swiss Movement Sports Watch, Category: Jewelry, Price: $500.00"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "728eb41f-3839-489d-ae7d-240f84d5cb48",
                          "name": "Remove config + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds={{cart_items_to_remove}}COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "{{cart_items_to_remove}}COUPON_XXX"
                                }
                              ]
                            },
                            "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f6ac4390-1d93-4d95-9c4b-c9d6de3deafd",
                          "name": "Check discount/products",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have the 544:Watch product in cart\", function () {",
                                  "    pm.expect(jsonData.items[0].product_id).to.be.eql(\"554\");",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            },
                            "description": "Checks that there is no coupon applied and still have items in cart"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "description": "Adds/Removes items & coupons in one call",
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "4f57bb35-ab60-4844-8bc1-cb4bf9723e81",
      "name": "/v2/carts/:id/items/:itemId",
      "item": [
        {
          "_postman_id": "cdb7fe02-ae3b-43c2-8e7b-b7365982b4e9",
          "name": "Product",
          "item": [
            {
              "_postman_id": "00895d86-4423-4a90-89eb-2b79abf6425f",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "df99483e-957a-440d-a5b5-ddfbb2649e47",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "fa42dcc0-ebba-4e6f-8c6c-61952547239f",
                      "name": "Simple",
                      "item": [
                        {
                          "_postman_id": "e295d61c-ae99-403e-9b9a-043b7a54bfab",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "3853fbee-5f64-451c-8ab9-eb491c579688",
                          "name": "Add Simple",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "872936af-6ba3-435c-ac27-e131ef91e109",
                          "name": "Carts: qty 1",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                                  "} else {",
                                  "    tests[\"Not 200 code or no cart items returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "768e387d-ce21-471e-9a87-3af5e254ff10",
                          "name": "Update simple",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a60b93c3-444c-4230-b3b7-17a67927d439",
                          "name": "Carts: qty 3",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "8156b568-4baa-4d40-9082-d0063703b188",
                          "name": "Alt update",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"cartItemId\": \"1111\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 4\n\t  }\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "Alternative way to updae the cart. This is the case where it is possible that the item id is in the body, even though it's not supposed to. The test makes sure the cartItemId in the body is replaced by the URI one"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a3179e0d-5812-4260-8166-57a0da31d659",
                          "name": "Carts: qty 4",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 4 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(4);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "86e5e9cc-df07-4027-beaa-2152e2be6802",
                      "name": "Configurable",
                      "item": [
                        {
                          "_postman_id": "3898d597-6f22-4598-8daa-7322265dced4",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "2ae529ff-52ed-4240-bf6b-8b144453ce47",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "0e5d6195-746c-4e87-b34a-84e92910bac9",
                          "name": "Carts: qty 1",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                                  "} else {",
                                  "    tests[\"Not 200 code or no cart items returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                                  "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "ebfeb915-a2b2-442f-af5e-1c3cf7524565",
                          "name": "Update configurable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"product\": {\n\t    \"product_id\": \"422\",\n\t    \"qty\": 3\n\t}\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "b331de51-5cd3-4558-87f4-80367446c067",
                          "name": "Carts: qty 3",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                                  "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "59cb377d-52c6-4098-aedf-790f8971dffb",
                          "name": "Alt update",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"cartItemId\": \"1111\",\n    \"product\": {\n\t    \"qty\": 4\n\t}\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "Alternative way to updae the cart. This is the case where it is possible that the item id is in the body, even though it's not supposed to. The test makes sure the cartItemId in the body is replaced by the URI one"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "e75fd899-e491-4d52-887a-202bb69b159b",
                          "name": "Carts: qty 4",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 4 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(4);",
                                  "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "7d9d2534-b6fd-41aa-b03c-83a461ccb0ca",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "e3084502-d80a-4676-8a8e-ccab8773b40d",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e2ec4fb6-1a2a-49f6-82e2-67b2a59e76d7",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "39b73650-44b7-4962-9b87-3b27f5196df8",
                      "name": "Carts: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items.length).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "18d92667-9683-4ab5-a34f-c2dba68b7772",
                      "name": "Delete by ID",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "0e21dd4f-a668-4280-b997-fb56dc17a598",
                      "name": "Check cart for no items",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "f574d0d5-6f7a-45cd-bae9-062a52abc61a",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "50f726c0-5e87-4c56-ba7f-3e102531eb80",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "8b45972c-a401-48f6-9e18-0bf35e721f92",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "1b1d12c5-5581-4a1a-8168-ffb23baeeb38",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "266e07a5-cfd4-413a-adc6-395577d37e4b",
                      "name": "Carts: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d0f1a77b-1aed-47cd-af75-da146bf8ba0a",
                      "name": "Update (no cartItem)",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        },
                        "description": "Physical Gift Card"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "0f7eac29-adda-4b7c-aafc-9bb308be8b55",
                      "name": "Carts: qty 3",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "b8704390-79dd-49cd-b9dd-36ce330a0705",
                      "name": "Alt update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"cartItemId\": \"1111\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 4\n\t  }\n}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        },
                        "description": "Alternative way to updae the cart. This is the case where it is possible that the item id is in the body, even though it's not supposed to. The test makes sure the cartItemId in the body is replaced by the URI one"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8a888905-eb0b-4a93-b25e-28d569c13a0b",
                      "name": "Carts: qty 4",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is now updated to 4 for the previously inserted simple product\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items[0].qty).to.eql(4);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "83b2e6c2-0697-4d7c-a6d4-4b1e2619865d",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "aa62de3b-544a-43bb-9875-ac38d997a789",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "12047686-47c6-49b2-bcf2-170cdb341a31",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "839d3e45-af5a-413b-8529-d4e04df2c880",
                      "name": "Carts: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items.length).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "a0c227a7-9d01-407f-9da6-806de277218b",
                      "name": "Delete by ID",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "1f70f4db-98c7-4113-9ca3-292f98b2421f",
                      "name": "Check cart for no items",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "a75157af-c847-4a70-bca6-68880f356b5c",
          "name": "Coupon",
          "item": [
            {
              "_postman_id": "4fe32f69-b726-4bdc-8d95-04d8679220c6",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "dbe5bc06-f809-459f-9842-7a4be874e486",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "d5e56591-b967-455e-9041-231fbf6b44a3",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "9da8b827-2831-414e-82e8-8ac1fe0a8c4d",
                      "name": "Add Configurable: Boots",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "cf60f42f-d052-46ef-b73f-544645bb6244",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "1db95fb8-8200-42eb-bc34-c6d09ab94767",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "ae539a58-cec1-49e9-b454-85178ca0484f",
                      "name": "items/COUPON_X",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/COUPON_XXX",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "COUPON_XXX"
                          ]
                        },
                        "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "2fa43e57-abc9-429f-aea4-af4affb1b62d",
                      "name": "Check discount/products",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});",
                              "",
                              "pm.test(\"Still have configurable products in cart\", function () {",
                              "    pm.expect(jsonData.items.length).to.be.eql(2);",
                              "});",
                              "",
                              ""
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Checks that there is no coupon applied and still have items in cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "67130ec6-414c-4199-86e1-221114a702c9",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "a98beb99-6737-4c3d-a249-b0a312ced70c",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "e5fd918e-0d2a-42ea-a8e6-ba387a54b402",
                      "name": "/carts: guest",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "792b6d7a-16f2-4863-a405-1b49040cc1bc",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "c76c6040-01d3-47bb-8d05-cec6156a9395",
                      "name": "Add 15 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "fbd0e5e7-686a-4c0b-9c64-17d4dc5176ea",
                      "name": "Code evening15 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"evening15 code exists\", function () {",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8ad9afa3-bf13-43e8-9672-780fbb915471",
                      "name": "items/COUPON_X",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/COUPON_XXX",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "COUPON_XXX"
                          ]
                        },
                        "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "94b7a95c-6b27-432c-b4fb-d97fca46262b",
                      "name": "Check discount/products",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});",
                              "",
                              "pm.test(\"Still have configurable item in cart\", function () {",
                              "    pm.expect(jsonData.items.length).to.be.eql(2);",
                              "});",
                              "",
                              ""
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Checks that there is no coupon applied and still have items in cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "2048e9fb-1e58-4e6a-8e46-33068ce37751",
      "name": "/v2/carts/:id/checkoutUrl",
      "item": [
        {
          "_postman_id": "66fba107-d3f1-4f12-b152-c214a8997ece",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "0c351d7d-acd5-45d7-8e57-d4f1ee18cf60",
              "name": "Create customer cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a customer cart"
              },
              "response": []
            },
            {
              "_postman_id": "dcf18f37-568e-4683-a9dc-e9c497ad1ac4",
              "name": "Add simple product to cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_items}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_items}}"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "a6978fd2-2b0f-4fde-9e41-6e60266f8a01",
              "name": "checkoutURL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Checkout URL is returned\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.jsonBody('url');",
                      "    pm.response.to.have.jsonBody('expires_in', 30);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_checkoutUrl}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_checkoutUrl}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "1378926e-1e2b-4643-8210-42fb208ac669",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "104bab96-5030-4ba3-a3c4-03c0733c33d0",
              "name": "Create guest cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
              },
              "response": []
            },
            {
              "_postman_id": "052faefd-0504-49f2-9601-9adb88c18234",
              "name": "Add simple item to cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_items}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_items}}"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "57680d2f-1d2e-46ba-a4fb-482c0125d337",
              "name": "checkoutURL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Checkout URL is returned\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.jsonBody('url');",
                      "    pm.response.to.have.jsonBody('expires_in', 30);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_checkoutUrl}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_checkoutUrl}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "5babbe78-2967-4350-8e46-86109949d668",
      "name": "/v2/carts/:id/customer",
      "item": [
        {
          "_postman_id": "bba17b39-a32e-42c8-84f1-7110964a3a91",
          "name": "Create customer cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                  "} else {",
                  "    tests[\"Cart ID is not returned\"] = false;",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "function isNumeric(n) {",
                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ]
            },
            "description": "Creates a customer cart"
          },
          "response": []
        },
        {
          "_postman_id": "5040b891-301e-46f7-babc-a96389cca3bb",
          "name": "Customer: add simple",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts_id_items}}",
              "host": [
                "{{domain}}{{endpoint_carts_id_items}}"
              ]
            },
            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
          },
          "response": []
        },
        {
          "_postman_id": "5545a2be-5f26-4ba8-bee2-17270f530ff8",
          "name": "Customer: cart qty 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Initial quantity is 1 after adding a simple product\", function () {",
                  "    pm.expect(jsonData.items.length).to.eql(1);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "{{cartId}}"
              ]
            },
            "description": "Creates a customer cart"
          },
          "response": []
        },
        {
          "_postman_id": "374ff9cf-9fb1-4e7f-9464-237805da7cc8",
          "name": "/carts: Guest Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                  "} else {",
                  "    tests[\"Cart ID is not returned\"] = false;",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "function isNumeric(n) {",
                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ]
            },
            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
          },
          "response": []
        },
        {
          "_postman_id": "1f17f24b-009c-46aa-8e4e-c111050fedfb",
          "name": "Guest: add downloadable",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"563\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts_id_items}}",
              "host": [
                "{{domain}}{{endpoint_carts_id_items}}"
              ]
            },
            "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
          },
          "response": []
        },
        {
          "_postman_id": "37f3aa97-b404-4356-8761-2c0d0cb7b166",
          "name": "Guest: cart qty 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Initial quantity is 1 after adding a downlodable product\", function () {",
                  "    pm.expect(jsonData.items.length).to.eql(1);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "{{cartId}}"
              ]
            },
            "description": "calls a customer cart as guest"
          },
          "response": []
        },
        {
          "_postman_id": "0633bf62-f82d-47ef-bcbd-9c9c179865ac",
          "name": "Merge carts",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (responseCode.code === 200 && jsonData.cartId) {",
                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                  "}",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Cart ID is returned\", function () {",
                  "    pm.expect(jsonData.cartId).to.not.be.empty;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts_id_customer}}",
              "host": [
                "{{domain}}{{endpoint_carts_id_customer}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "720ba333-ecac-4981-8292-7d2264c0b39f",
          "name": "Customer: cart qty 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Carts merged, 2 items in cart\", function () {",
                  "    pm.expect(jsonData.items.length).to.eql(2);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "{{cartId}}"
              ]
            },
            "description": "Creates a customer cart"
          },
          "response": []
        },
        {
          "_postman_id": "5196a138-5b5c-43f8-90b4-9d69a5726301",
          "name": "Merge: call ME endpoint",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Cannot use ME endpoint here\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/me/customer",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "me",
                "customer"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "992e2464-ac96-4b44-a56e-0fd4a2afef22",
      "name": "/v2/customers/me",
      "item": [
        {
          "_postman_id": "732a05f9-c707-46b7-8120-72b2ed55a8ec",
          "name": "Customer: me",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eda8e7c9-de5e-4f59-8e45-4c7798df6698",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Customer ID is returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.customer_id).to.not.be.empty;",
                  "});",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.unset(\"customer_id\");"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{domain}}{{endpoint_customers_me}}",
              "host": [
                "{{domain}}{{endpoint_customers_me}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "fae71209-9adc-41b1-b6f3-cc38ec25b124",
          "name": "Guest cannot call this endpoint",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d71bccf3-b3d3-480f-9000-d0d6294ea575",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Guest cannot access, unauthorized\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{domain}}{{endpoint_customers_me}}",
              "host": [
                "{{domain}}{{endpoint_customers_me}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "d6968e74-0b3b-44c7-b155-9b363a29c313",
      "name": "/v2/customers/:id/addresses",
      "item": [
        {
          "_postman_id": "bd930d3d-c333-46a8-a189-a04500bebb9a",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "9d372013-9f99-4623-972f-b46ad45a4d07",
              "name": "Get address",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "575714b8-e63a-402c-92c0-c45fe722225c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.variables.set(\"customer-id\", \"1\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "fe5dc968-baee-4c87-8863-3384aa68dd7e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Guest cannot access customer endpoint by an existing ID of 1\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "pm.variables.unset(\"customer-id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {},
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "acf9556b-dc2e-4dba-b38b-388e2aec66b2",
              "name": "Create address",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "575714b8-e63a-402c-92c0-c45fe722225c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.variables.set(\"customer-id\", \"1\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "fe5dc968-baee-4c87-8863-3384aa68dd7e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Guest cannot access customer endpoint by an existing ID of 1\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "pm.variables.unset(\"customer-id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "616e032d-b9da-4615-86d1-bc38247fbf66",
              "name": "Delete address",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "21e83ae0-714e-47ef-aea7-805fe1801de4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Guest cannot access customer endpoint by an existing ID of 1\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "pm.variables.unset(\"customer-id\");",
                      "pm.variables.unset(\"address-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "bb50f680-c6e9-49d0-b73c-19dd063ea186",
                    "type": "text/javascript",
                    "exec": [
                      "pm.variables.set(\"customer-id\", \"1\");",
                      "pm.variables.set(\"address-id\", \"1\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Making sure the guest cannot access this endpoint",
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "8b96ab47-47e6-4d79-906e-827e0c875e19",
          "name": "Customer 2 (C2)",
          "item": [
            {
              "_postman_id": "fbf6af2c-48f9-4b73-b303-0e4946db8b32",
              "name": "Get C1 ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "49b2bd9d-6088-419c-9f85-a46e0a4e0e12",
              "name": "Create address via C1",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                    "type": "text/javascript",
                    "exec": [
                      "// preparation for delete / update address endpoint",
                      "var jsonData = pm.response.json();",
                      "if (jsonData.addressId) {",
                      "    pm.environment.set(\"address-id\", jsonData.addressId);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "b0fb45cf-b682-4c27-9575-bcabc9c3205c",
              "name": "Create address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2d0771bb-36f1-4096-a9d8-0f213a404ad3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "b8aebea1-bccc-4e15-9371-a95d89be21e4",
              "name": "Get address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e8c83952-bfd1-4c86-9518-1fb825553b39",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "9fe73d19-3074-4951-a3d7-d43d0bf2aae9",
              "name": "Update address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d5fe4a9-8d64-4c86-abb5-d70556361c07",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "034019cd-7070-499f-b523-c16e67b7bf67",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));",
                      "setTimeout(function(){}, 2000); //delay 2 seconds so that created_at and updated_at are different"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"EE\",\n    \"region\": \"Harjumaa\",\n    \"postcode\": \"13916\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "c6d6de92-cfd8-4dd0-a7e3-d84edcb8dbf6",
              "name": "Delete address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e95581e-0177-4dbd-b8f6-a28e4e6d88f7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "8962a4a0-78eb-41c3-a892-b5ada00c0b70",
              "name": "cleanup",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "146b2f14-10e9-43a5-972e-02e5442395e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "c0cc7491-6e56-43c4-bb93-6e2e93943f07",
          "name": "Create",
          "item": [
            {
              "_postman_id": "b2b02512-8478-4bdd-8f61-ba80dfc96463",
              "name": "Errors",
              "item": [
                {
                  "_postman_id": "3b25ed4d-64bc-4adc-b290-2bc926915052",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e232847-89ab-4d2e-94b0-11642a2b365b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "5fb5819e-59e4-48b0-a591-b1372882f58b",
                  "name": "Required errors",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "66930191-8830-4aae-9aa8-5900658a79bf",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "/**",
                          " * Traverses all default errors and checks that they exist as json objects",
                          " */",
                          "pm.test(\"All default errors appear correctly\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    const list = ['firstname', 'lastname', 'street', 'country_id', 'city', 'postcode', 'telephone']",
                          "    pm.expect(jsonData.messages.error.length).to.be.gte(7);",
                          "    list.forEach((path) => {",
                          "        let result = jsonData.messages.error.filter((item) => item.path === path);",
                          "        pm.expect(result.length).to.eq(1);",
                          "        if (result.length === 0) {",
                          "            console.log('This path is not available in this mage instance: ' + path)",
                          "        }",
                          "    })",
                          "});",
                          "",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "50408dba-3fc6-4885-9165-a0a2916dc537",
                  "name": "Region doesn't exist",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0a78e10c-f4e1-4db8-9cd8-45413846399d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('State/Province does not exist.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"test1.firstname\",\n    \"lastname\": \"test1.lastname\",\n    \"city\": \"test1.city\",\n    \"country_id\": \"US\",\n    \"region\": \"bla\",\n    \"postcode\": \"test1.postcode\",\n    \"telephone\": \"test1.telephone\",\n    \"street\": [\"test1.street\"]\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "570016c1-53dc-4615-9824-9f55ef6e3f04",
                  "name": "Region is not a string",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "71d16f78-8d2b-42b3-953a-735f1b5f1c50",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"US\",\n        \"region\": 1,\n        \"postcode\": \"test1.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "e98b9e45-5c4f-41bf-9c95-30be78f4bd63",
                  "name": "No region provided",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "86a42c19-c1c8-4d24-a87e-befae29dec4b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"State/Province error is thrown\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('\"State/Province\" is required.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"\",\n        \"postcode\": \"test1.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n  }"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "3df07fb9-54f0-4119-bce6-4ede8fe7eb3e",
                  "name": "No region needed for Italy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "27c387ae-33eb-46d6-a04d-18252e260a26",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Only postcode error is thrown and no region error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('postcode');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"IT\",\n        \"region\": \"\",\n        \"postcode\": \"\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n  }"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "13643121-3ef9-4635-8903-198e87308344",
                  "name": "Country code too long",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a0e30c-2a27-49f6-8be5-26d47dbea85d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"United States\",\n        \"region\": \"test.region\",\n        \"postcode\": \"test.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "56647efe-5df7-4069-b81c-d8c53137a4a5",
                  "name": "Country code too short",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2456a7c-69e5-438c-9873-320242742b9f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"U\",\n        \"region\": \"test.region\",\n        \"postcode\": \"test.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b570ddae-af2d-49be-8573-6490d642017f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f3b6d2d4-b0b3-4b7c-ab0c-aa16d0f7ce2f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "13c17c84-29da-44fb-ab3e-b34c917c8d0a",
              "name": "Defaults",
              "item": [
                {
                  "_postman_id": "22dbedeb-8967-41e7-ade2-3287e4389b14",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "f6559f3c-67f5-487e-8251-c0b3c63bb4fa",
                  "name": "Create address (get ID)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                        "type": "text/javascript",
                        "exec": [
                          "// preparation for delete / update address endpoint",
                          "var jsonData = pm.response.json();",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ],\n    \"is_default_billing\": 0,\n    \"is_default_shipping\": 1\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "172c1586-3132-4607-8781-de5638b13edd",
                  "name": "Check default status",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3e77a69a-d733-4443-93a7-c93b0108514b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct default status is returned\", function () {",
                          "    var lastAddress = pm.response.json();",
                          "    pm.expect(lastAddress.is_default_billing).to.eq(0);",
                          "    pm.expect(lastAddress.is_default_shipping).to.eq(1);",
                          "});",
                          "",
                          "pm.environment.unset(\"seed\");",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "101f2995-3dd7-46f5-a08c-0a46b85d3306",
              "name": "Get customer ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "3d2fd4cf-0126-43a3-9dd0-abf0a8fc4ce9",
              "name": "Create address (get ID)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                    "type": "text/javascript",
                    "exec": [
                      "// preparation for delete / update address endpoint",
                      "var jsonData = pm.response.json();",
                      "if (jsonData.addressId) {",
                      "    pm.environment.set(\"address-id\", jsonData.addressId);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "26ab5434-ae07-445c-a0a6-e24b023787b0",
              "name": "Check last address entry",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50a057c1-3a2b-4288-9af5-192ce60da704",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.customer_id).to.eq(pm.environment.get(\"customer-id\"));",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.updated_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"US\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Arizona\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"85000\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "73de2b84-8f12-4a1b-8c32-8194e293988c",
              "name": "Check addresses by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a4db5316-86f5-4c77-ae9d-2a8f07740f5f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    var lastAddress = pm.response.json();",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.updated_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"US\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Arizona\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"85000\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "37159e98-9d80-4e83-bd98-b269d90e5ae8",
              "name": "cleanup",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40b75786-3514-46b9-98c4-6d9774f2d4ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "id": "4b7a8d7f-9bbd-4c6f-878a-f71d38e1a982",
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "id": "cee13ced-d2e8-4416-b506-3ffd165aac32",
                "type": "text/javascript"
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "a99d44ab-b458-4fdb-a5a7-45a94aec6ccd",
          "name": "Update",
          "item": [
            {
              "_postman_id": "69f58be4-434f-46f3-b6fe-4386bfdfb351",
              "name": "Errors",
              "item": [
                {
                  "_postman_id": "16a3cb49-351b-4472-9e18-6b110010d59e",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e232847-89ab-4d2e-94b0-11642a2b365b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "5384753a-78d5-4a59-a1c8-6741023bdb25",
                  "name": "Create address (get ID)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                        "type": "text/javascript",
                        "exec": [
                          "// preparation for delete / update address endpoint",
                          "var jsonData = pm.response.json();",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "deaec18d-a757-4f39-9cab-6619d8afa148",
                  "name": "Empty body",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "244d963e-3945-44c9-9b7a-066d0d6f8c4e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Empty body, status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "2d3c0a31-432c-4188-914c-115f1cc09d19",
                  "name": "Region doesn't exist",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0a78e10c-f4e1-4db8-9cd8-45413846399d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('State/Province does not exist.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"US\",\n    \"region\": \"bla\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "9c5f7450-e40b-4159-bf8a-2a72a95ed752",
                  "name": "Region is not a string",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "71d16f78-8d2b-42b3-953a-735f1b5f1c50",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"US\",\n    \"region\": 1\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "b260381a-585f-4e29-bed6-1b4d65b05643",
                  "name": "No region provided",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "86a42c19-c1c8-4d24-a87e-befae29dec4b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"State/Province error is thrown\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('\"State/Province\" is required.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"US\",\n    \"region\": \"\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "5379c41e-45e4-4292-8ae9-cc32ad147aef",
                  "name": "No region needed for Italy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "27c387ae-33eb-46d6-a04d-18252e260a26",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Only postcode error is thrown and no region error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('postcode');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"IT\",\n    \"region\": \"\",\n    \"postcode\": \"\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "14af0a58-896f-4b76-a6ef-ae94909eb393",
                  "name": "Country code too long",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a0e30c-2a27-49f6-8be5-26d47dbea85d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"United States\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "ebe549c8-610b-4477-8818-02bfd17f5495",
                  "name": "Country code too short",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2456a7c-69e5-438c-9873-320242742b9f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"U\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "a0d1e2fb-d0bd-4169-8eb0-a1fed40c8883",
                  "name": "cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5be76750-28f8-414d-961c-8de6c1185296",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"seed\");",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}?ids={{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "query": [
                        {
                          "key": "ids",
                          "value": "{{address-id}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b570ddae-af2d-49be-8573-6490d642017f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f3b6d2d4-b0b3-4b7c-ab0c-aa16d0f7ce2f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "a07a68b9-f695-46f2-8e19-b4679df56f79",
              "name": "Defaults",
              "item": [
                {
                  "_postman_id": "5c7e6f26-0ae3-418f-a20e-537c93131ac0",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "b7ff0915-4013-46fe-880d-433266c8d1d9",
                  "name": "Create address (get ID)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                        "type": "text/javascript",
                        "exec": [
                          "// preparation for delete / update address endpoint",
                          "var jsonData = pm.response.json();",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ],\n    \"is_default_billing\": 1,\n    \"is_default_shipping\": 1\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "ad0a4abd-9f5d-402d-9ebe-2850e0a5b705",
                  "name": "Attempt set defaults to 0",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2102d275-5464-4b29-a4e1-fe22a1d2e578",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "7c76b266-d40a-4922-bb90-adfbc01176dd",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"country_id\": \"US\",\n\t\"region\": \"AZ\",\n    \"is_default_billing\": 0,\n    \"is_default_shipping\": 0\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "fb9f3fd1-689b-43d2-94c5-f1e5f094cca0",
                  "name": "Check error + clean",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f690b4c0-cbf4-408e-8c30-9392cd8054f9",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Cannot delete a default address\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.environment.unset(\"seed\");",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Test to make sure that we cannot change defaults by passing 0's at the end we try to delete, a successful error on delete means that it is stil default and we were unsuccessful.",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3f0b46c5-f723-455e-b31f-5d9a2bfe26f2",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "c8a791ec-f3df-4373-927e-ff890b51d270",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "182eb767-5608-43db-9069-7f9a225d7820",
              "name": "Get customer ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "03b2ab65-ea24-4f98-8642-dfeade63a520",
              "name": "Create address (get ID)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                    "type": "text/javascript",
                    "exec": [
                      "// preparation for delete / update address endpoint",
                      "var jsonData = pm.response.json();",
                      "if (jsonData.addressId) {",
                      "    pm.environment.set(\"address-id\", jsonData.addressId);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"fax\": \"{{seed}}.fax\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "58d4a06a-9f14-4678-8a59-2e36e08c7e3e",
              "name": "Check address data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b7a49c3a-ca8e-4bef-a3b8-69a9f109d2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.customer_id).to.eq(pm.environment.get(\"customer-id\"));",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.created_at).to.eq(lastAddress.updated_at);",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"US\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Arizona\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"85000\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.fax).to.eq(pm.environment.get(\"seed\") + \".fax\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "    pm.expect(lastAddress.is_default_billing).to.eq(0);",
                      "    pm.expect(lastAddress.is_default_shipping).to.eq(0);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "2e101911-531d-4fad-bb71-d1abb5fd3ff0",
              "name": "Update address data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2102d275-5464-4b29-a4e1-fe22a1d2e578",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "034019cd-7070-499f-b523-c16e67b7bf67",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));",
                      "setTimeout(function(){}, 2000); //delay 2 seconds so that created_at and updated_at are different"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"EE\",\n    \"region\": \"Harjumaa\",\n    \"postcode\": \"13916\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"fax\": \"{{seed}}.fax\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "14242fbe-8fa6-4591-8721-772851c10afc",
              "name": "Check updated address",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6c29ba64-ea52-460b-8482-c640365195ec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.customer_id).to.eq(pm.environment.get(\"customer-id\"));",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.created_at).to.not.eq(lastAddress.updated_at);",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"EE\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Harjumaa\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"13916\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.fax).to.eq(pm.environment.get(\"seed\") + \".fax\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "    pm.expect(lastAddress.is_default_billing).to.eq(0);",
                      "    pm.expect(lastAddress.is_default_shipping).to.eq(0);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e0fd3a4d-b403-41a2-a325-03cc04ccffb6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "95765351-5808-4849-b02a-4029be8a414b",
              "name": "Set default",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2102d275-5464-4b29-a4e1-fe22a1d2e578",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7c76b266-d40a-4922-bb90-adfbc01176dd",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"country_id\": \"US\",\n\t\"region\": \"AZ\",\n    \"is_default_billing\": 1,\n    \"is_default_shipping\": 0\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "a016ef97-3d46-40ca-b683-19ea41114551",
              "name": "Check default + clean",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "16690fc5-fb7b-4f22-ab8f-3c6d66034ea3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.is_default_billing).to.eq(1);",
                      "    pm.expect(lastAddress.is_default_shipping).to.eq(0);",
                      "});",
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e0fd3a4d-b403-41a2-a325-03cc04ccffb6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "4b7a8d7f-9bbd-4c6f-878a-f71d38e1a982",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "cee13ced-d2e8-4416-b506-3ffd165aac32",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "cd123093-e8ae-4f88-80ba-d408adc43bb5",
          "name": "Delete",
          "item": [
            {
              "_postman_id": "19e315b6-4bba-404c-af0c-dbccb58a83fa",
              "name": "Single",
              "item": [
                {
                  "_postman_id": "32402d6d-800c-4539-82ab-082c66f4d560",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "17e42647-1a30-4fbc-87db-19215e721a8c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "fdabe597-8c4d-4ff5-a1b1-b4215930159b",
                  "name": "Create address",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "49048781-04cb-44ee-8271-225312bec2a1",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully created address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "var jsonData = pm.response.json();",
                          "pm.test(\"Customer address ID is returned\", function () {",
                          "    pm.expect(jsonData.addressId).to.not.be.empty;",
                          "});",
                          "",
                          "// preparation for delete address endpoint",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\t\"prefix\": \"Test1.prefix\",\n        \"firstname\": \"Test1.first\",\n        \"middlename\": \"Test1.mid\",\n        \"lastname\": \"Test1.last\",\n        \"suffix\": \"Test1.suffix\",\n        \"company\": \"Test1.comapny\",\n        \"city\": \"Test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"Arizona\",\n        \"postcode\": \"85000\",\n        \"telephone\": \"618-322-0000\",\n        \"vat_id\": \"Test1.vat_id\",\n        \"street\": [\n            \"Test1.street1\",\n            \"Test1.street2\"\n        ]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "b6eb9944-1140-4d53-80e3-16d43066b82c",
                  "name": "Delete address by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e2d949cc-8606-477b-98b0-422bb879951e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully deleted address\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "b962b424-836a-4aab-bc20-0e581fffb4a9",
                  "name": "No address exists + cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "75c2627f-a51e-40cd-b1cc-4e290ec2107f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Resource should not exist\", function () {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Address not found error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].message).to.eq('Resource not found.');",
                          "});",
                          "",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "c65eabea-d825-4325-9ead-111b72e107bc",
              "name": "Multiple",
              "item": [
                {
                  "_postman_id": "60c98dbe-bfc0-442c-93b2-5829dc0df7b7",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "815fc4f6-d2ae-400f-8edb-e72ad3cf1e0b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "a25626de-f341-419c-8c9b-6a6f4e23a5be",
                  "name": "Create first address",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d05474ac-0db9-4084-968e-085b65fd518b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully created address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "var jsonData = pm.response.json();",
                          "pm.test(\"Customer address ID is returned\", function () {",
                          "    pm.expect(jsonData.addressId).to.not.be.empty;",
                          "});",
                          "",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\t\"prefix\": \"Test1.prefix\",\n        \"firstname\": \"Test1.first\",\n        \"middlename\": \"Test1.mid\",\n        \"lastname\": \"Test1.last\",\n        \"suffix\": \"Test1.suffix\",\n        \"company\": \"Test1.comapny\",\n        \"city\": \"Test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"Arizona\",\n        \"postcode\": \"85000\",\n        \"telephone\": \"618-322-0000\",\n        \"vat_id\": \"Test1.vat_id\",\n        \"street\": [\n            \"Test1.street1\",\n            \"Test1.street2\"\n        ]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "a520d891-591f-4fcf-891f-8ef86f2216fc",
                  "name": "Create second address",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1d8f7c79-4735-4291-997a-68c6afccccc1",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully created address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "var jsonData = pm.response.json();",
                          "pm.test(\"Customer address ID is returned\", function () {",
                          "    pm.expect(jsonData.addressId).to.not.be.empty;",
                          "});",
                          "",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id-2\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\t\"prefix\": \"Test1.prefix\",\n        \"firstname\": \"Test1.first\",\n        \"middlename\": \"Test1.mid\",\n        \"lastname\": \"Test1.last\",\n        \"suffix\": \"Test1.suffix\",\n        \"company\": \"Test1.comapny\",\n        \"city\": \"Test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"Arizona\",\n        \"postcode\": \"85000\",\n        \"telephone\": \"618-322-0000\",\n        \"vat_id\": \"Test1.vat_id\",\n        \"street\": [\n            \"Test1.street1\",\n            \"Test1.street2\"\n        ]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "373fc060-e294-4fd0-99c5-f9aa597e62c5",
                  "name": "Delete addresses by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "54cb59ee-a543-419a-a837-c4ef22ace3f2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully deleted addresses\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}?ids={{address-id}},{{address-id-2}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "query": [
                        {
                          "key": "ids",
                          "value": "{{address-id}},{{address-id-2}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "8194e990-8715-4ec8-a407-a2737fbe12dc",
                  "name": "No address 1 + cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6cb1e62f-0230-4278-a1fc-9f609b5fb352",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Resource should not exist\", function () {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Address not found error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].message).to.eq('Resource not found.');",
                          "});",
                          "",
                          "pm.environment.unset(\"address-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "ab249df6-5e1d-4922-adae-21e92a0e0aff",
                  "name": "No address 2 + cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6387521e-485f-4e06-8aaa-d4d0f5fceea7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Resource should not exist\", function () {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Address not found error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].message).to.eq('Resource not found.');",
                          "});",
                          "",
                          "pm.environment.unset(\"address-id-2\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id-2}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id-2}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "70f9f595-a96a-40b0-baff-01b5864b4927",
          "name": "Cleaning routine",
          "item": [
            {
              "_postman_id": "785c408e-46a7-42c4-bd40-b04067686ad4",
              "name": "Get customer ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e2fb85-871f-448e-bebf-ea7689ae550a",
                    "type": "text/javascript",
                    "exec": [
                      "if (responseCode.code === 200) {",
                      "    var jsonData = pm.response.json();",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "1686591d-7864-47fd-b1f5-4bc1e16dc2a4",
              "name": "Get all addresses",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11498c79-a3ac-49a0-8836-970d8cb7d003",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const list = [];",
                      "jsonData.forEach((address) => {",
                      "    list.push(address.entity_id);",
                      "})",
                      "",
                      "pm.environment.set(\"cleaning-list\", list.join(','));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "0873b8f0-9dce-4063-b44e-4a72fd4531ba",
              "name": "Create default address",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "000987a0-8d9f-4c84-8691-9dc12832cc96",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ],\n    \"is_default_billing\": 1,\n    \"is_default_shipping\": 1\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "78c55928-95cc-482b-b5bd-c2fe9ffdfe6f",
              "name": "Delete all addresses",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2df5b28c-4fc2-41ef-9b51-a00534651f09",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"cleaning-list\");",
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}?ids={{cleaning-list}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "query": [
                    {
                      "key": "ids",
                      "value": "{{cleaning-list}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Removes all addresses and leaves one as default",
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "3d546487-2f83-45fd-a855-c7c6cfc8adc7",
      "name": "/v2/products",
      "item": [
        {
          "_postman_id": "a2e11fd1-c600-437e-9faa-52207f06c13b",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "5c1b238e-7f95-44c7-849f-cd634be7b216",
              "name": "No limit",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 10 products when no limits are applied\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(10);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "160f2638-579c-4631-9fb4-fafcdfc248ac",
              "name": "Category - New Arrivals",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(3);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=10",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "adf09b28-092a-4e9e-8516-655be0fa2870",
              "name": "Category - does not exist",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Get category does not exist error\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=99999",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "99999"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "b06e4726-9f7c-47c7-a82d-85819eb5b699",
              "name": "Page 1, Limit 4",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(4);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?page=1&limit=4",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "4"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "9e9fb62f-c1c1-411a-acf9-3602eb87f213",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "affc70c7-7f18-4c83-84b8-e43b32a1e691",
              "name": "No limit",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 10 products when no limits are applied\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(10);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "e4e410b7-9dcb-418c-bfc7-f59cb0c854d5",
              "name": "Category - New Arrivals",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(3);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=10",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "14d69fef-d4c3-49c2-882b-31ed0a122f22",
              "name": "Category - does not exist",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Get category does not exist error\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=99999",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "99999"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "8a732bbd-c042-421d-9f96-e7e3f108788c",
              "name": "Page 1, Limit 4",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(4);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?page=1&limit=4",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "4"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "bac5b84d-d7ea-461c-94a3-fc97fb4cb647",
      "name": "/v2/products/:id",
      "item": [
        {
          "_postman_id": "ee04d901-e923-456a-bca0-1acf90a10a12",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "35812f74-e88f-410d-9bf4-00a1a31b3c66",
              "name": "Bundled: 447",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed bundled. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('bundle');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('447');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/447",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "447"
                  ]
                },
                "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
              },
              "response": []
            },
            {
              "_postman_id": "f8ac195e-f9a6-47e6-ad8c-3ab9d99bfd1e",
              "name": "Configurable: Skirt",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed configurable. Has stock data. Customer grp 0. Has children.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('configurable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('422');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "    pm.expect(jsonData.children.attributes['92'].id).to.eql('92');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/422",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "422"
                  ]
                },
                "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
              },
              "response": []
            },
            {
              "_postman_id": "272019b7-ed74-4520-8eb2-142f6a40a32a",
              "name": "Downloadable: 563",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed donwloadable. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('downloadable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('563');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/563",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "563"
                  ]
                },
                "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
              },
              "response": []
            },
            {
              "_postman_id": "d6cec169-e9b4-4ba7-ae23-16ad41299cf0",
              "name": "Grouped: 439",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed grouped. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('grouped');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('439');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/439",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "439"
                  ]
                },
                "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
              },
              "response": []
            },
            {
              "_postman_id": "02b640eb-451e-4395-9739-c2c1d8b661b6",
              "name": "Nominal: 564",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed nominal. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('virtual');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('564');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "    pm.expect(jsonData.recurring_profile.start_date_is_editable).to.eql('1');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/564",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "564"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "a964bd2d-7b4b-4bd7-8ab1-884d9f1d4082",
              "name": "Simple: 554",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data. Customer grp 0. No options.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('554');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "    pm.expect(jsonData.has_options).to.eql('0');",
                      "    pm.expect(jsonData.required_options).to.eql('0');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/554",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "554"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "55b45436-1c24-4f07-b1ff-4dece3422786",
              "name": "Simple: 370 + Options",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data. Customer grp 0.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('370');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      "",
                      "pm.test(\"Product indeed has custom options\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.has_custom_options).to.be.true;",
                      "    pm.expect(jsonData.custom_options[0].product_id).to.eql('370');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/370",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "370"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "12fb1ca7-c643-4833-8516-bc3e2f9f0e54",
              "name": "GiftCard Physical/dropdown: 454",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f139093-c317-437e-b371-544698256bd2",
                    "type": "text/javascript",
                    "exec": [
                      "//Testing for EE edition specifics",
                      "var jsonData = pm.response.json();",
                      "if (pm.variables.get(\"mage_type\") === 'EE') {",
                      "    pm.test(\"Status code is 200\", function () {",
                      "        pm.response.to.have.status(200);",
                      "    });",
                      "",
                      "    pm.test(\"Product is indeed GC. Has stock data. \", function () {",
                      "        ",
                      "        pm.expect(jsonData.type_id).to.eql('giftcard');",
                      "        pm.expect(jsonData.stock_item.product_id).to.eql('454');",
                      "    });",
                      "} else {",
                      "    pm.test(\"Product is not visible individually\", function () {",
                      "        pm.response.to.have.status(404);",
                      "    });",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/454",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "454"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "b94024c5-ed81-4d14-b480-72e8dc845f1f",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "f82b52a6-fe58-41fe-bdf7-506d710d5910",
              "name": "Bundled: 447",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed bundled. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('bundle');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('447');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/447",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "447"
                  ]
                },
                "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
              },
              "response": []
            },
            {
              "_postman_id": "b2d13dbb-908f-4797-a50d-646f4973f414",
              "name": "Configurable: Skirt",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed configurable. Has stock data. Has children.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('configurable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('422');",
                      "    pm.expect(jsonData.children.attributes['92'].id).to.eql('92');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/422",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "422"
                  ]
                },
                "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
              },
              "response": []
            },
            {
              "_postman_id": "99ca1f0a-6781-4040-96b2-e71e7da830de",
              "name": "Downloadable: 563",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed donwloadable. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('downloadable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('563');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/563",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "563"
                  ]
                },
                "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
              },
              "response": []
            },
            {
              "_postman_id": "cfbd27ec-6eee-4259-9c75-37826c2829e1",
              "name": "Grouped: 439",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed grouped. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('grouped');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('439');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/439",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "439"
                  ]
                },
                "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
              },
              "response": []
            },
            {
              "_postman_id": "b069b7fe-f1a6-4304-817d-51837b8c0114",
              "name": "Nominal: 564",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed nominal. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('virtual');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('564');",
                      "    pm.expect(jsonData.recurring_profile.start_date_is_editable).to.eql('1');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/564",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "564"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "7bf582a0-dc77-40db-a3e3-f6537134ea57",
              "name": "Simple: 554",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data. No options.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('554');",
                      "    pm.expect(jsonData.has_options).to.eql('0');",
                      "    pm.expect(jsonData.required_options).to.eql('0');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/554",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "554"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "734f58ed-ea9a-487d-a84a-f3db90a5f958",
              "name": "Simple: 370 + Options",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('370');",
                      "});",
                      "",
                      "pm.test(\"Product indeed has custom options\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.has_custom_options).to.be.true;",
                      "    pm.expect(jsonData.custom_options[0].product_id).to.eql('370');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/370",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "370"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "ffe73049-ea33-4dd6-8baa-5fa386b9b48d",
              "name": "GiftCard Physical/dropdown: 454",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fff5006d-d64d-4a12-bd06-e20c18783d7c",
                    "type": "text/javascript",
                    "exec": [
                      "//Testing for EE edition specifics",
                      "var jsonData = pm.response.json();",
                      "if (pm.variables.get(\"mage_type\") === 'EE') {",
                      "    pm.test(\"Status code is 200\", function () {",
                      "        pm.response.to.have.status(200);",
                      "    });",
                      "",
                      "    pm.test(\"Product is indeed GC. Has stock data. \", function () {",
                      "        ",
                      "        pm.expect(jsonData.type_id).to.eql('giftcard');",
                      "        pm.expect(jsonData.stock_item.product_id).to.eql('454');",
                      "    });",
                      "} else {",
                      "    pm.test(\"Product is not visible individually\", function () {",
                      "        pm.response.to.have.status(404);",
                      "    });",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/454",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "454"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "8c272ca9-e07e-4963-b20f-dbbd67b17b54",
      "name": "Cart Rules (no coupon)",
      "item": [
        {
          "_postman_id": "24dd08c8-feef-40e7-aa01-94c84b03348a",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "45e0ae69-0eff-4613-bfed-f72796608113",
              "name": "Buy X get Y free",
              "item": [
                {
                  "_postman_id": "9f88be69-6c61-4b65-ad22-6bdea0aa79e1",
                  "name": "Create customer cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "09dff337-787f-4789-9326-3c7836991e9e",
                  "name": "Add Configurable: Boots",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 2,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "054e31be-9eed-4b3f-bf81-e3167524750b",
                  "name": "Buy one get one free",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "839db68e-650d-4bb9-8ca2-a22c75197742",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded cart via ME endpoint\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Boots in cart with one added free\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(parseFloat(jsonData.items_count)).to.eq(1);",
                          "    pm.expect(parseFloat(jsonData.items_qty)).to.eq(2);",
                          "    pm.expect(parseFloat(jsonData.grand_total)).to.eq(470);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/me",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "me"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "This cart rule ID is 38. Needs to have 2+ items from category Shoes to make one free. 1 use per customer. Customer group: General, VIP, Private Sales Member(EE)",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "3b200474-5a1a-4e53-a794-a24b4b97b16b",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "66d3a8db-6cd8-4b7a-86cf-8ca8a8623c42",
              "name": "Qty > 5",
              "item": [
                {
                  "_postman_id": "8a1e1f97-b37d-44ac-8512-51ac730a5d17",
                  "name": "/carts: Guest Cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                  },
                  "response": []
                },
                {
                  "_postman_id": "a4935340-7673-4732-971c-c2582f4d2582",
                  "name": "Add grouped: qty6",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"439\",\n\t    \"qty\": 1,\n\t    \"super_group\": {\n\t      \"541\" : 6\n\t    }\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
                  },
                  "response": []
                },
                {
                  "_postman_id": "ba092dda-64af-45db-8dc0-dee6654d3028",
                  "name": "Cart has discount",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//Tests customer segments, but they are a tricky beast as they get picked up",
                          "//from customer frontend session + log. This needs to be revistied.",
                          "if (pm.environment.get(\"mage_type\") === 'EE' && false) {",
                          "    pm.test(\"We have a 15 off discount\", function () {",
                          "        var jsonData = pm.response.json();",
                          "        pm.expect(jsonData.totals.discount.value).to.eql(\"-15.0000\");",
                          "    });",
                          "}",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "description": "Tests cart rule combinations that do not have a coupon code attached to them"
    },
    {
      "_postman_id": "8b2d291f-6ec7-487c-b369-c4d6cde27ced",
      "name": "/v2/categories",
      "item": [
        {
          "_postman_id": "269a617c-9c07-4562-b3fb-bef1aba48234",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "b8e119b9-a185-48ca-b03a-c8bb57d28e24",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{customer-access-token}}",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d0079da7-ef5b-476f-a922-53fadcc3b9ba",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c3bb5423-bf5c-461f-821c-10556c7d9556",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "d62dab34-ce38-44fc-98e2-7780c859ae62",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "e7790ace-5cd2-4413-9e8c-35c8c4b6293a",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{guest-access-token}}",
                "type": "string"
              }
            ]
          },
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "f9fd0d13-b532-4b6b-b0a2-5b67dc1a5b47",
      "name": "/v2/categories/:id",
      "item": [
        {
          "_postman_id": "1fd1f550-11e6-41c2-baa6-6349d97ea9be",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "9be49fda-b0eb-450f-9df5-699474b68fb3",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}/1",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ],
                  "path": [
                    "1"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{customer-access-token}}",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d0079da7-ef5b-476f-a922-53fadcc3b9ba",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c3bb5423-bf5c-461f-821c-10556c7d9556",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "4dc5e088-1ef6-4e78-b976-ccb74e2c8f4a",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "315a875c-e392-468c-af55-e62007396c2c",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}/1",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ],
                  "path": [
                    "1"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{guest-access-token}}",
                "type": "string"
              }
            ]
          },
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "638f6c8e-3fab-4fda-b232-4a410894bc40",
      "name": "auth/token: CORS",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "a1b98b3b-08b0-4097-8485-7897b41843c2",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Successful CORS call per definition\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "tests[\"Body is empty\"] = responseBody === \"\";",
              "tests[\"Allow-Headers is proper\"] = postman.getResponseHeader(\"Access-Control-Allow-Headers\") === 'Content-Type,Version,Authorization,PHP_AUTH_USER,PHP_AUTH_PW';",
              "tests[\"Allow-Methods are proper\"] = postman.getResponseHeader(\"Access-Control-Allow-Methods\") === 'GET, POST, PUT, UPDATE, DELETE, OPTIONS';",
              "tests[\"Allow-Origin is *\"] = postman.getResponseHeader(\"Access-Control-Allow-Origin\") === '*';"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Access-Control-Request-Method",
            "value": "POST"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": {
          "raw": "{{domain}}{{endpoint_auth_token}}",
          "host": [
            "{{domain}}{{endpoint_auth_token}}"
          ]
        }
      },
      "response": []
    }
  ]
}
